{"version":3,"sources":["components/Modal/Modal.module.css","components/ImageGalleryItem/ImageGalleryItem.module.css","components/Button/Button.module.css","App.module.css","components/Searchbar/Searchbar.module.css","components/Searchbar/Searchbar.js","services/pixabay-api.js","components/ImageGalleryItem/ImageGalleryItem.js","components/Button/Button.js","components/ImageGallery/ImageGallery.js","components/Modal/Modal.js","App.js","reportWebVitals.js","index.js","components/ImageGallery/ImageGallery.module.css"],"names":["module","exports","Searchbar","onSubmitSearchQuery","useState","query","setQuery","resetForm","className","styles","SearchForm","onSubmit","e","preventDefault","trim","toast","toastId","type","autoComplete","autoFocus","placeholder","value","onChange","target","PicturesApiService","this","BASE_URL","KEY","IMAGE_TYPE","ORIENTATION","PER_PAGE","MAX_PAGES","searchQuery","page","a","axios","defaults","baseURL","parameters","get","response","status","data","Promise","reject","Error","newQuery","ImageGalleryItem","galleryImageURL","largeImageURL","tags","openModal","onClick","src","alt","Button","loadMorePictures","Status","picturesApiService","ImageGallery","setStatus","imagesArray","setImagesArray","error","setError","isLoadMorePicturesRequested","setIsLoadMorePicturesRequested","areItemsInImagesArray","length","hasImagesArrayMaxNumberOfItems","useRef","isFirstRender","fetchPictures","useCallback","then","result","hits","map","webformatURL","current","showMessage","prevImagesArray","catch","useEffect","resetPage","window","scroll","incPage","message","shouldButtonBeVisible","reachMaxPage","index","color","height","width","modalRoot","document","querySelector","Modal","closeModal","addEventListener","handleKeyDown","removeEventListener","code","createPortal","Overlay","currentTarget","Image","App","setSearchQuery","showModal","setShowModal","setLargeImageURL","setTags","toggleModal","prevShowModal","autoClose","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a0c12ac0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__QVtZw\",\"Modal\":\"Modal_Modal__1fY3k\",\"Image\":\"Modal_Image__1VpLV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__6_0Is\",\"ImageGalleryItem-image\":\"ImageGalleryItem_ImageGalleryItem-image__1jey7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__12Mo7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2JPUB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__JxX5M\",\"SearchForm\":\"Searchbar_SearchForm__1b84S\",\"SearchForm-button\":\"Searchbar_SearchForm-button__3ltFN\",\"SearchForm-button-label\":\"Searchbar_SearchForm-button-label__2D9dt\",\"SearchForm-input\":\"Searchbar_SearchForm-input__3TwKa\"};","import { PropTypes } from 'prop-types';\nimport { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport styles from './Searchbar.module.css';\n\nexport default function Searchbar({ onSubmitSearchQuery }) {\n  const [query, setQuery] = useState('');\n\n  const onChange = e => {\n    const { value } = e.target;\n    setQuery(value);\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (query.trim()) {\n      onSubmitSearchQuery(query);\n      resetForm();\n      return;\n    }\n    toast('Please, enter your request in search field', { toastId: 'Searchbar-toast' });\n  };\n\n  const resetForm = () => {\n    setQuery('');\n  };\n\n  return (\n    <header className={styles.Searchbar}>\n      <form className={styles.SearchForm} onSubmit={onSubmit}>\n        <button type=\"submit\" className={styles['SearchForm-button']}>\n          <span className={styles['SearchForm-button-label']}>Search</span>\n        </button>\n\n        <input\n          className={styles['SearchForm-input']}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          value={query}\n          onChange={onChange}\n        />\n      </form>\n    </header>\n  );\n}\n\nSearchbar.propTypes = { onSubmitSearchQuery: PropTypes.func.isRequired };\n","import axios from 'axios';\nexport default class PicturesApiService {\n  constructor() {\n    this.BASE_URL = 'https://pixabay.com/api/';\n    this.KEY = '23997684-9eb4ec0071398138bd37e685f';\n    this.IMAGE_TYPE = 'photo';\n    this.ORIENTATION = 'horizontal';\n    this.PER_PAGE = 12;\n    this.MAX_PAGES = 42;\n    this.searchQuery = '';\n    this.page = 1;\n  }\n\n  async fetchPictures() {\n    axios.defaults.baseURL = this.BASE_URL;\n    const parameters = `?image_type=${this.IMAGE_TYPE}&orientation=${this.ORIENTATION}&q=${this.searchQuery}&page=${this.page}&per_page=${this.PER_PAGE}&key=${this.KEY}\n`;\n\n    const response = await axios.get(parameters);\n    if (response.status === 200) return response.data;\n    return Promise.reject(new Error('Error fetching data'));\n  }\n\n  set query(newQuery) {\n    this.searchQuery = newQuery;\n  }\n\n  incPage() {\n    this.page += 1;\n  }\n\n  resetPage() {\n    this.page = 1;\n  }\n\n  reachMaxPage() {\n    return this.page >= this.MAX_PAGES ? true : false;\n  }\n}\n","import { PropTypes } from 'prop-types';\nimport styles from './ImageGalleryItem.module.css';\n\nexport default function ImageGalleryItem({ galleryImageURL, largeImageURL, tags, openModal }) {\n  return (\n    <li\n      className={styles.ImageGalleryItem}\n      onClick={() => {\n        openModal(largeImageURL, tags);\n      }}\n    >\n      <img\n        className={styles['ImageGalleryItem-image']}\n        src={galleryImageURL}\n        data-src={largeImageURL}\n        alt={tags}\n      />\n    </li>\n  );\n}\n\nImageGalleryItem.propTypes = {\n  galleryImageURL: PropTypes.string.isRequired,\n  largeImageURL: PropTypes.string.isRequired,\n  tags: PropTypes.string.isRequired,\n  openModal: PropTypes.func.isRequired,\n};\n","import { PropTypes } from 'prop-types';\nimport styles from './Button.module.css';\n\nexport default function Button({ loadMorePictures }) {\n  return (\n    <button className={styles.Button} onClick={loadMorePictures}>\n      Load more\n    </button>\n  );\n}\n\nButton.propTypes = {\n  loadMorePictures: PropTypes.func.isRequired,\n};\n","import { useState, useEffect, useRef, useCallback } from 'react';\r\nimport PicturesApiService from '../../services/pixabay-api';\r\nimport Loader from 'react-loader-spinner';\r\nimport { toast } from 'react-toastify';\r\nimport { PropTypes } from 'prop-types';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport styles from './ImageGallery.module.css';\r\nimport ImageGalleryItem from '../ImageGalleryItem';\r\nimport Button from '../Button';\r\n\r\nconst Status = {\r\n  IDLE: 'idle',\r\n  PENDING: 'pending',\r\n  RESOLVED: 'resolved',\r\n  REJECTED: 'rejected',\r\n};\r\nconst MAX_NUMBER_OF_ITEMS_IN_IMAGES_ARRAY = 12;\r\nconst picturesApiService = new PicturesApiService();\r\n\r\nexport default function ImageGallery({ searchQuery, openModal }) {\r\n  const [status, setStatus] = useState(Status.IDLE);\r\n  const [imagesArray, setImagesArray] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [isLoadMorePicturesRequested, setIsLoadMorePicturesRequested] = useState(false);\r\n\r\n  const areItemsInImagesArray = imagesArray.length !== 0;\r\n\r\n  const hasImagesArrayMaxNumberOfItems = useRef(false);\r\n  const isFirstRender = useRef(true);\r\n\r\n  const fetchPictures = useCallback(() => {\r\n    picturesApiService\r\n      .fetchPictures()\r\n      .then(result =>\r\n        result.hits.map(({ webformatURL, largeImageURL, tags }) => {\r\n          return { webformatURL, largeImageURL, tags };\r\n        }),\r\n      )\r\n      .then(imagesArray => {\r\n        hasImagesArrayMaxNumberOfItems.current =\r\n          imagesArray.length < MAX_NUMBER_OF_ITEMS_IN_IMAGES_ARRAY;\r\n        const isItemsInImagesArray = imagesArray.length !== 0;\r\n\r\n        if (!isItemsInImagesArray) {\r\n          showMessage('There are no results on your search query. Please, enter another request.');\r\n        }\r\n\r\n        setImagesArray(prevImagesArray => [...prevImagesArray, ...imagesArray]);\r\n        setStatus(Status.RESOLVED);\r\n      })\r\n      .catch(error => {\r\n        setError(error);\r\n        setStatus(Status.REJECTED);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (isFirstRender.current) {\r\n      isFirstRender.current = false;\r\n      return;\r\n    }\r\n\r\n    picturesApiService.query = searchQuery;\r\n    picturesApiService.resetPage();\r\n    setImagesArray([]);\r\n    setStatus(Status.PENDING);\r\n    fetchPictures();\r\n    window.scroll(0, 0);\r\n  }, [searchQuery, fetchPictures]);\r\n\r\n  useEffect(() => {\r\n    if (isFirstRender.current) {\r\n      isFirstRender.current = false;\r\n      return;\r\n    }\r\n\r\n    if (isLoadMorePicturesRequested) {\r\n      picturesApiService.incPage();\r\n      setIsLoadMorePicturesRequested(false);\r\n      setStatus(Status.PENDING);\r\n      fetchPictures();\r\n    }\r\n  }, [isLoadMorePicturesRequested, fetchPictures]);\r\n\r\n  const showMessage = message => {\r\n    toast(message, { toastId: 'ImageGallery-toast' });\r\n  };\r\n\r\n  const shouldButtonBeVisible =\r\n    !hasImagesArrayMaxNumberOfItems.current &&\r\n    status === Status.RESOLVED &&\r\n    !picturesApiService.reachMaxPage();\r\n\r\n  if (status === Status.IDLE) {\r\n    return (\r\n      <p className={styles['ImageGallery-text']}>\r\n        Please, enter your search query to find pictures\r\n      </p>\r\n    );\r\n  }\r\n\r\n  if (status === Status.REJECTED) {\r\n    showMessage(error.message);\r\n    return <p className={styles['ImageGallery-text']}>Error fetching data</p>;\r\n  }\r\n\r\n  if (status === Status.RESOLVED || status === Status.PENDING)\r\n    return (\r\n      <>\r\n        {areItemsInImagesArray && (\r\n          <ul className={styles.ImageGallery}>\r\n            {imagesArray.map(({ webformatURL, largeImageURL, tags }, index) => {\r\n              return (\r\n                <ImageGalleryItem\r\n                  key={index}\r\n                  galleryImageURL={webformatURL}\r\n                  largeImageURL={largeImageURL}\r\n                  tags={tags}\r\n                  openModal={openModal}\r\n                />\r\n              );\r\n            })}\r\n          </ul>\r\n        )}\r\n\r\n        {status === Status.PENDING && (\r\n          <div className={styles['Loader-container']}>\r\n            <Loader type=\"Puff\" color=\"#00BFFF\" height={300} width={300} />\r\n          </div>\r\n        )}\r\n\r\n        {shouldButtonBeVisible && (\r\n          <Button\r\n            loadMorePictures={() => {\r\n              setIsLoadMorePicturesRequested(true);\r\n            }}\r\n          />\r\n        )}\r\n      </>\r\n    );\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  searchQuery: PropTypes.string.isRequired,\r\n  openModal: PropTypes.func.isRequired,\r\n};\r\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { PropTypes } from 'prop-types';\nimport styles from './Modal.module.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default function Modal({ closeModal, largeImageURL, tags }) {\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  });\n\n  const handleBackdrop = e => {\n    if (e.target === e.currentTarget) {\n      closeModal();\n    }\n  };\n\n  const handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      closeModal();\n    }\n  };\n\n  return createPortal(\n    <div className={styles.Overlay} onClick={handleBackdrop}>\n      <div className={styles.Modal}>\n        <img className={styles.Image} src={largeImageURL} alt={tags} />\n      </div>\n    </div>,\n    modalRoot,\n  );\n}\n\nModal.propTypes = {\n  closeModal: PropTypes.func.isRequired,\n  largeImageURL: PropTypes.string.isRequired,\n  tags: PropTypes.string.isRequired,\n};\n","import { useState } from 'react';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport Searchbar from './components/Searchbar';\r\nimport ImageGallery from './components/ImageGallery';\r\nimport Modal from './components/Modal';\r\nimport styles from './App.module.css';\r\n\r\nexport default function App() {\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [largeImageURL, setLargeImageURL] = useState('');\r\n  const [tags, setTags] = useState('');\r\n\r\n  const onSubmitSearchQuery = searchQuery => {\r\n    setSearchQuery(searchQuery);\r\n  };\r\n\r\n  const openModal = (largeImageURL, tags) => {\r\n    toggleModal();\r\n    setLargeImageURL(largeImageURL);\r\n    setTags(tags);\r\n  };\r\n\r\n  const toggleModal = () => {\r\n    setShowModal(prevShowModal => !prevShowModal);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.App}>\r\n      <Searchbar onSubmitSearchQuery={onSubmitSearchQuery} />\r\n      <main>\r\n        <ImageGallery searchQuery={searchQuery} openModal={openModal} />\r\n        {showModal && <Modal closeModal={toggleModal} largeImageURL={largeImageURL} tags={tags} />}\r\n        <ToastContainer autoClose={3000} />\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__1S6AB\",\"ImageGallery-text\":\"ImageGallery_ImageGallery-text__1s-lj\",\"Loader-container\":\"ImageGallery_Loader-container__268L4\"};"],"sourceRoot":""}